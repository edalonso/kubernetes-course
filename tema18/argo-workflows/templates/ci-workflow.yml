apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci-workflow
spec:
  templates:
  - name: git-clone
    inputs:
      parameters:
      - name: repo_token_name
      - name: repo_token_value
      - name: repo
      - name: branch
      - name: body
      - name: working_dir
    script:
      image: makocchi/alpine-git-curl-jq
      workingDir: /work/{{ inputs.parameters.working_dir }}
      command: [sh]
      source: git clone --depth 1 --single-branch --branch {{ inputs.parameters.branch }} https://{{ inputs.parameters.repo_token_name }}:{{ inputs.parameters.repo_token_value }}@{{ inputs.parameters.repo }} .
      volumeMounts:
        - mountPath: /work
          name: work
  - name: manage-gitlab
    inputs:
      parameters:
      - name: body
      - name: action
      - name: commit_status
    container:
      image: dcr.disastack.com/devops/disa-kapi:1.0
      command: [./main]
      env:
      - name: BODY
        value: "{{ inputs.parameters.body }}"
      - name: ACTION
        value: "{{ inputs.parameters.action }}"
      - name: COMMIT_STATUS
        value: "{{ inputs.parameters.commit_status }}"
  - name: exec-command
    inputs:
      parameters:
      - name: exec_command
    script:
      image: makocchi/alpine-git-curl-jq
      workingDir: /work
      command: [sh]
      source: "{{ inputs.parameters.exec_command }}"
      volumeMounts:
        - mountPath: /work
          name: work
  - name: verify-image
    inputs:
      parameters:
      - name: registry_credentials
      - name: context_subpath
      - name: stage
        value: ""
    container:
      image: gcr.io/kaniko-project/executor:debug
      command: [/kaniko/executor]
      args:
      - --context=dir:///work
      - --no-push
      - --context-sub-path={{ inputs.parameters.context_subpath }}
      - --target={{ inputs.parameters.stage }}
      volumeMounts:
        - name: "{{ inputs.parameters.registry_credentials }}"
          mountPath: /kaniko/.docker/
        - mountPath: /work
          name: work
  - name: uid
    inputs:
      parameters:
      - name: globaluid
    container:
      image: golang:1.18.3
      command: [sh, -c]
      args: ["sleep 1; tr -dc A-Za-z0-9 </dev/urandom | head -c 64 > /tmp/random_text.txt"]
    outputs:
      parameters:
      - name: uid
        valueFrom:
          path: /tmp/random_text.txt
        globalName: "{{ inputs.parameters.globaluid }}"
  - name: get-secret
    container:
      image: golang:1.18.3
      command: [sh, -c]
      args: ['
        echo "secret from file push: `ls /secret/mountpath-push/`"
        echo "secret from file pull: `ls /secret/mountpath-pull/`"
      ']
      volumeMounts:
      - name: gitlab-argo-pull-dev
        mountPath: "/secret/mountpath-pull"
      - name: gitlab-argo-push-dev
        mountPath: "/secret/mountpath-push"
    outputs:
      parameters:
      - name: pass-push
        valueFrom:
          path: /secret/mountpath-push/repo_token_value
      - name: pass-pull
        valueFrom:
          path: /secret/mountpath-pull/repo_token_value
  - name: get-app-info
    inputs:
      parameters:
      - name: working_dir
      - name: environment
    container:
      image: mikefarah/yq
      command: [sh, -c]
      args: ['
        yq eval .metadata.labels.platform /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/app.yml > /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/environment && yq eval .kind /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/app.yml > /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/kind-app
      ']
      volumeMounts:
      - mountPath: /work
        name: work
    outputs:
      parameters:
      - name: environment
        valueFrom:
          path: /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/environment
      - name: kind-app
        valueFrom:
          path: /work/{{ inputs.parameters.working_dir }}/paas_config/{{ inputs.parameters.environment }}/kind-app
